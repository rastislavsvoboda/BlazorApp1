@page "/Data/People"

@using DataAccessLibrary
@using DataAccessLibrary.Models
@using BlazorApp1.Models;

@inject IPeopleData _db

<h1>People Page</h1>

<h4>Insert New Person</h4>
<EditForm Model="@newPerson" OnValidSubmit="@InsertPersonAsync">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <InputText id="firstName" @bind-Value="@newPerson.FirstName"></InputText>
    <InputText id="lastName" @bind-Value="@newPerson.LastName"></InputText>
    <InputText id="emailAddress" @bind-Value="@newPerson.EmailAddress"></InputText>
    
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

<h4>Current People</h4>

@if (people == null)
{
    <p><em>Loading...</em></p>
}
else
{   
    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var person in people)
            {
                <tr>
                    <td>@person.FirstName</td>
                    <td>@person.LastName</td>
                    <td>@person.EmailAddress</td>
                </tr>
            }
        </tbody>
   
    </table>
}

@code {

    private List<PersonModel> people;
    private DisplayPersonModel newPerson = new DisplayPersonModel();

    protected override async Task OnInitializedAsync()
    {
        people = (await _db.GetPeople()).ToList();
    }

    private async Task InsertPersonAsync()
    {
        var person = new PersonModel()
        {
            FirstName = newPerson.FirstName,
            LastName = newPerson.LastName,
            EmailAddress = newPerson.EmailAddress

        };

        await _db.InsertPerson(person);

        people.Add(person);

        newPerson = new DisplayPersonModel();
    }
}
